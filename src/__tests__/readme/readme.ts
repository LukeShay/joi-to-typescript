import { existsSync, readFileSync, rmdirSync } from 'fs';

import { convertFromDirectory } from '../../index';

describe('this is the example on the readme', () => {
  const typeOutputDirectory = './src/__tests__/readme/interfaces';
  beforeEach(() => {
    if (existsSync(typeOutputDirectory)) {
      rmdirSync(typeOutputDirectory, { recursive: true });
    }
  });

  test('a good example schema', async () => {
    const result = await convertFromDirectory({
      schemaDirectory: './src/__tests__/readme/schemas',
      typeOutputDirectory
    });

    expect(result).toBe(true);

    const readmeContent = readFileSync(`${typeOutputDirectory}/Readme.ts`).toString();

    expect(readmeContent).toBe(`/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface Job {
  businessName: string;
  jobTitle: string;
}

/**
 * A list of People
 */
export type People = Person[];

export interface Person {
  firstName: string;
  job?: Job;
  /**
   * Last Name
   */
  lastName: string;
}
`);
  });
});
